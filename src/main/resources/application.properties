# 끝에 공백 없는지 꼭 확인하기

# 서버 포트
server.port = 9099

#프로젝트 이름
spring.application.name=shop

# DevTools 활성화 . 라이브러리 설치 시 기본 설정
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false

# JPA ( JPA는 H2 DB와 연결 설정, 변경사항만 업데이트됨 ) 
spring.jpa.hibernate.ddl-auto=update
# 배포할때는 none 또는 validation. create : 기존의 테이블이 존재 할 때 drop 하고 새로 만들게 됨. 

# JPA 메소드를 사용할 경우 JPA가 SQL 쿼리를 를 생성해서 DB에 저장 함. ( Oracle, MySQL, MSSQL...)
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# Orale DB 연결
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=C##SHOP
#spring.datasource.password=1234
#spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
#spring.jpa.database=oracle
#
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# MySQL DB연결 (02.28)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shop?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
spring.jpa.database=mysql

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#Thymeleaf cache 사용 중지
spring.thymeleaf.cache = false

#파일 한 개당 최대 사이즈
spring.servlet.multipart.maxFileSize=20MB

#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize=100MB

#상품 이미지 업로드 경로
# 폴더 생성해줘야 함. 
itemImgLocation=C:/shop/item

#리소스 업로드 경로
# 폴더 생성해줘야 함. 
uploadPath=file:///C:/shop/

#기본 batch size 설정
spring.jpa.properties.hibernate.default_batch_fetch_size=1000



 spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
